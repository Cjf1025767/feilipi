package hbm.model;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.NotFound;
import org.hibernate.annotations.NotFoundAction;

// Generated 2017-12-6 16:03:36 by Hibernate Tools 4.0.1.Final

/**
 * RbacRole generated by hbm2java
 */
@Entity
@Table(name = "rbacrole")
public class RbacroleEx implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	@Id
	@Column(name = "roleguid", nullable = false)
	private String roleguid;
	private String fatherroleguid;
	private String rolename;
	private int inheritance;
	//使用@JoinColumn实现单向关联， 使用@OneToMany的mappedBy属性实现双向关联，关联对象中设置@ManyToOne(fetch = ) 和 @JoinColumn(name = )
	@OneToMany(cascade = CascadeType.REFRESH, fetch=FetchType.EAGER)
	@JoinColumn(name = "fatherroleguid")
	@NotFound(action=NotFoundAction.IGNORE)
	public java.util.List<RbacroleEx> childrens;

	public RbacroleEx() {
	}

	public RbacroleEx(String roleguid, String fatherroleguid, String rolename, int inheritance) {
		this.roleguid = roleguid;
		this.fatherroleguid = fatherroleguid;
		this.rolename = rolename;
		this.inheritance = inheritance;
	}

	public String getRoleguid() {
		return this.roleguid;
	}

	public void setRoleguid(String roleguid) {
		this.roleguid = roleguid;
	}

	public String getFatherroleguid() {
		return this.fatherroleguid;
	}

	public void setFatherroleguid(String fatherroleguid) {
		this.fatherroleguid = fatherroleguid;
	}

	public String getRolename() {
		return this.rolename;
	}

	public void setRolename(String rolename) {
		this.rolename = rolename;
	}

	public int getInheritance() {
		return this.inheritance;
	}

	public void setInheritance(int inheritance) {
		this.inheritance = inheritance;
	}

}
